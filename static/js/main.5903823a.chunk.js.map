{"version":3,"sources":["components/RadioButtonInput/RadioButtonInput.js","components/NumberInput/NumberInput.js","components/RangeInput/RangeInput.js","components/Calculator/Calculator.js","App.js","reportWebVitals.js","index.js"],"names":["RadioButtonInput","setState","className","name","htmlFor","type","value","id","onInput","e","target","NumberInput","state","min","max","step","RangeInput","startOfRange","endOfRange","suffix","title","useState","rangeProgression","setRangeProgression","inputRef","useRef","inputValueClassNames","classNames","isFirefox","navigator","userAgent","toLowerCase","indexOf","useEffect","console","log","style","border","ref","defaultValue","parseInt","Math","ceil","precentageOf","backgroundColor","background","Calculator","monthlyIncome","setMonthlyIncome","qtyChildren","setQtyChildren","cohabitant","setCohabitant","statesArray","setStatesArray","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5903823a.chunk.js","sourcesContent":["import React from 'react'\n\nimport \"./RadioButtonInput.scss\"\n\nconst RadioButtonInput = ({ setState }) => {\n\n    return(\n        <div className=\"radio-buttons\">\n            <fieldset name=\"cohabitantFieldset\">\n                <label htmlFor=\"cohabitantFieldset\">Har du samboer?</label>\n\n                <div className=\"radio-buttons--wrapper\">\n                    <input \n                        type=\"radio\"\n                        name=\"cohabitant\"\n                        value=\"true\"\n                        id=\"ja\" \n                        onInput={e => {setState(e.target.value)}} />\n\t\t            <label className=\"radio-button--toggle_true\" htmlFor=\"ja\">Ja</label>\n\n\t\t            <input \n                        type=\"radio\"\n                        name=\"cohabitant\"\n                        value=\"false\"\n                        id=\"nei\" \n                        onInput={e => {setState(e.target.value)}} />\n\t\t            <label className=\"radio-button--toggle_false\" htmlFor=\"nei\">Nei</label>\n                </div>\n            </fieldset>\n        </div>\n    )\n\n}\n\nexport default RadioButtonInput","import React from 'react';\n\n\nimport \"./NumberInput.scss\"\n\nconst NumberInput = ({state, setState, min, max, name, step}) => {\n\n    function formatNumber(number) {\n        return number.toLocaleString(\"en-GB\").replace(\".\")\n    }  \n\n    return(\n        <div className=\"number-input\">\n            <input \n                type=\"number\" \n                value={state} \n                min={min}\n                max={max}\n                step={step}\n                onInput={e => {setState(e.target.value)}}\n                />\n        </div>\n    )\n}\n\nexport default NumberInput\n\n","import React, { useState, useRef, useEffect } from 'react' \nimport classNames from 'classnames'\n\nimport \"./RangeInput.scss\"\nimport NumberInput from '../NumberInput/NumberInput'\n\nconst RangeInput = ({\n        state, \n        setState, \n        min, \n        max, \n        startOfRange, \n        endOfRange, \n        suffix, \n        title, \n        name, \n        step, }) => {\n    const [rangeProgression, setRangeProgression] = useState(0)\n    const inputRef = useRef(null)\n    \n    const inputValueClassNames = classNames('calculator--input-value', {\n        'calculator--input-value--selected': state > 0,\n    })\n    \n    let isFirefox = navigator.userAgent.toLowerCase().indexOf('firefox') > -1;\n\n    function precentageOf(min, max, value) {\n        let precentage = Math.ceil(((value - min) * 100) / (max - min));    \n        return precentage\n    }\n\n    function formatNumber(number) {\n        return number.toLocaleString(\"en-GB\").replace(\",\", \" \")\n    }   \n\n    useEffect(() => {\n        console.log(inputRef)\n    },[])\n    \n    return(\n        <div className=\"calculator--input-wrapper\">\n            <label htmlFor={name}>{title}</label>\n                \n                <div className={inputValueClassNames}>\n                    <NumberInput state={state} setState={setState} name={name} min={min} max={max} step={step/2}/>\n                    <p>{suffix}</p>\n                </div>\n                <div className=\"calculator--input--range-group--wrapper\">\n                    <div className=\"calculator--input--range-input--wrapper\" style={isFirefox ? {} : {border: \"1px solid #ec583b\"}}> \n                        <input\n                        ref={inputRef} \n                        name={name}\n                        min={min}\n                        max={max}\n                        defaultValue={min}\n                        type=\"range\"\n                        step={step}\n                        onInput={e => {\n                            if(isFirefox){\n                                setState(parseInt(e.target.value))\n                            } else {\n                                setState(parseInt(e.target.value))\n                                setRangeProgression(precentageOf(min, max, e.target.value))\n                            }\n                        }}\n                        style={isFirefox ? {} : {\n                            backgroundColor: \"transparent\",\n                            background: `linear-gradient(\n                                90deg,\n                                rgba(236, 88, 59, 1) 0%,\n                                rgba(236, 88, 59, 1) ${rangeProgression}%,\n                                rgba(255, 255, 255, 1) ${rangeProgression}%\n                                )`,\n                            }}/>\n                    </div>\n                    <p>{startOfRange}</p>\n                    <p>{endOfRange}</p>\n                </div>\n            </div>\n    )\n}\n\nexport default RangeInput","import React, { useEffect, useState } from 'react'\nimport RadioButtonInput from '../RadioButtonInput/RadioButtonInput'\n\nimport RangeInput from '../RangeInput/RangeInput'\n\nimport \"./Calculator.scss\"\n/* TODO - FIX FOR MOZILLA */\nconst Calculator = () => {\n    const [monthlyIncome, setMonthlyIncome] = useState(5000)\n    const [qtyChildren, setQtyChildren] = useState(\"-\")\n    const [cohabitant, setCohabitant] = useState(null)\n    const  [statesArray, setStatesArray] = useState({\n        monthlyIncome,\n        cohabitant,\n        qtyChildren,\n    })\n    \n    useEffect(() => {\n        setStatesArray({\n            ...statesArray,\n            monthlyIncome,\n            cohabitant,\n            qtyChildren,\n        })\n    },[monthlyIncome, qtyChildren, cohabitant])\n    console.log(monthlyIncome)\n    /* console.log(qtyChildren) */\n    return (\n        <form className=\"calculator\">\n            <RangeInput\n                state={monthlyIncome}\n                setState={setMonthlyIncome}\n                min={5000}\n                max={100000}\n                startOfRange=\"5 000 NOK\"\n                endOfRange=\"100 000 NOK\"\n                suffix=\"NOK\"\n                title=\"Hvor mye får du utbetalt i lønn per måned?\"\n                step={1000}\n                name=\"monthly-income\" />\n\n            <RadioButtonInput setState={setCohabitant} />\n\n            <RangeInput \n                state={qtyChildren} \n                setState={setQtyChildren}\n                min={0}\n                max={4}\n                startOfRange=\"Ingen Barn\"\n                endOfRange=\"4 Barn\"\n                suffix=\"Barn\"\n                title=\"Har du barn?\"\n                name=\"number-of-children\" />\n        </form>\n      );\n\n}\n\nexport default Calculator","\nimport Calculator from './components/Calculator/Calculator';\n\nimport './App.scss';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Calculator />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}